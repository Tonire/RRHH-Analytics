@model MVCApp.Models.ProveedorModels
@{
    if (User.IsInRole("SuperAdministrador")) {
        Layout = "~/Views/Shared/_SuperLayout.cshtml";
    }
    if (User.IsInRole("Administrador")) {
        Layout = "~/Views/Shared/_AdminLayout.cshtml";
    }
    ViewBag.Title = "Crear proveedor";

    ViewBag.Breadcrumb = new Breadcrumb(new Crumb[] {
        new Crumb("Proveedor", "", "fa-th-large"), new Crumb("Crear proveedor")
    });
}
<div class="row">
    <div class="col-xs-12">
        <div class="box">
            <!-- /.box-header -->
            <div class="box-body">
                @using (Html.BeginForm("Create", "Proveedores", FormMethod.Post, new { role = "form", id = "productoForm" })) {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="box-body">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Email)
                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @placeholder = "Introduce el email del proveedor" })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Nombre)
                            @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @placeholder = "Introduce el nombre" })
                            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CIF)
                            @Html.TextBoxFor(model => model.CIF, new { @class = "form-control", @placeholder = "Introduce el CIF del proveedor" })
                            @Html.ValidationMessageFor(model => model.CIF, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Telefono)
                            @Html.TextBoxFor(model => model.Telefono, new { @class = "form-control", @placeholder = "Introduce el precio de compra" })
                            @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Direccion)
                            @Html.TextBoxFor(model => model.Direccion, new { @class = "form-control", @placeholder = "Introduce el precio de venta" })
                            @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Localidad)
                            @Html.TextBoxFor(model => model.Localidad, new { @class = "form-control", @placeholder = "Introduce el precio de venta" })
                            @Html.ValidationMessageFor(model => model.Localidad, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Pais)
                            @Html.TextBoxFor(model => model.Pais, new { @class = "form-control", @placeholder = "Introduce el precio de venta" })
                            @Html.ValidationMessageFor(model => model.Pais, "", new { @class = "text-danger" })
                        </div>
                    </div>
                            <!-- /.box-body -->

                    <div class="box-footer">
                        <button type="submit" class="btn btn-primary">Crear proveedor</button>
                    </div>
                }
            </div>
            <!-- /.box-body -->
        </div>
    </div>
</div>
@section scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/AdminLTE/plugins/select2/select2.full.min.js"></script>
    <script>
        $(document).ready(function () {
            $(".js-example-basic-multiple").select2();
        });
    </script>
    <script>
        $(document).ready(function () {
            var form = $('#userForm')
                , formData = $.data(form[0])
                , settings = formData.validator.settings
                // Store existing event handlers in local variables
                , oldErrorPlacement = settings.errorPlacement
                , oldSuccess = settings.success;

            settings.errorPlacement = function (label, element) {

                // Call old handler so it can update the HTML
                oldErrorPlacement(label, element);

                // Add Bootstrap classes to newly added elements
                label.parents('.form-group').addClass('has-error');
                label.addClass('text-danger');
            };

            settings.success = function (label) {
                // Remove error class from <div class="form-group">, but don't worry about
                // validation error messages as the plugin is going to remove it anyway
                label.parents('.form-group').removeClass('has-error');

                // Call old handler to do rest of the work
                oldSuccess(label);
            };
        });
    </script>
}
@section especificos{
    <!--select2-->
    <link rel="stylesheet" href="~/Scripts/AdminLTE/plugins/select2/select2.min.css">
}
